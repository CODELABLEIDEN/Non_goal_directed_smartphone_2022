master-thesis-IS-DS documentation!
**********************************

Contents:

* Getting started

* Commands

alignment.moving_averages.training.lstm_MA.get_data(filename)

   Read data from hdf5 file Create a list of the lowest level keys,
   the name of the data files Return both data and list

alignment.moving_averages.training.lstm_MA.get_len_train(data, files, data_percentage)

   Gets the length of all the data from all participants Takes the
   data and all filenames as array

alignment.moving_averages.training.lstm_MA.standardize(bs, fs)

   Standardize input data with mean=0 and std=1

alignment.moving_averages.predict.main_lstm_MA(EEG, model_file_path, weights_file_path)

   Main data alignment function.  Generates model predictions or
   generate data for model training  preprocess force sensor data
   Input(s):

      EEG = EEG data  model_file_path = keras model (h5 or JSON)
      weights_file_path = keras model weights (h5)

   Output(s):
      BS = preprocessed bendsensor data model_predictions =  output
      from lstm

   Requires:
      getcleanedbsdata.m predict_MA.m

   main_lstm_MA(EEG, 'model_version2_2_4A.json',
   'model_version2_2_4A_weights.h5'); load in keras model

alignment.moving_averages.predict.predict_MA(BS, net)

   predict alignments Input(s):

      BS = filtered bendsensor data
         shape length x 1

      net = keras imported network

   Output(s):
      model_predictions = model output
         shape length x 1

   prepare data for prediction set sequence length in matlab/
   timesteps in python


Indices and tables
******************

* Index

* Module Index

* Search Page
